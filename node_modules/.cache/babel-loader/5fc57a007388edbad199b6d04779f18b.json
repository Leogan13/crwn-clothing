{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Leogan\\\\Desktop\\\\Software developer\\\\REACT\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Leogan\\\\Desktop\\\\Software developer\\\\REACT\\\\crwn-clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport Header from './components/header/header.component';\nimport { auth } from './components/firebase/firebase.utils';\nimport { createUserProfileDocument } from './components/firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //onAuthStateChanged is always listening to any changes to the state check components sign up and sign in\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); // gets the user ref from the function the userRef has the id \n\n        userRef.onSnapshot(snapShot => {\n          //works like .get() but this method takes a function with snapShot.data() we can actually what is inside the userRef\n          this.setState({\n            currentUser: _objectSpread({\n              id: snapShot.id\n            }, snapShot.data())\n          });\n        });\n      } else {\n        this.setState({\n          currentUser: userAuth\n        }); //this way the application knows if an user is logged in and which user it is.\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\Leogan\\Desktop\\Software developer\\REACT\\crwn-clothing\\src\\App.js"],"names":["React","Switch","Route","HomePage","ShopPage","SignInAndSignUpPage","Header","auth","createUserProfileDocument","connect","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","currentUser","id","data","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,IAAT,QAAqB,sCAArB;AACA,SAAQC,yBAAR,QAAwC,sCAAxC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,mBAAL,GAA2BN,IAAI,CAACQ,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AAAE;AACrE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMT,yBAAyB,CAACQ,QAAD,CAA/C,CADY,CAC8C;;AAE1DC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAAC;AAC9B,eAAKC,QAAL,CAAc;AACZC,YAAAA,WAAW;AACTC,cAAAA,EAAE,EAAEH,QAAQ,CAACG;AADJ,eAENH,QAAQ,CAACI,IAAT,EAFM;AADC,WAAd;AASD,SAVD;AAWD,OAdD,MAeK;AACL,aAAKH,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAEL;AAAf,SAAd,EADK,CACqC;AACzC;AACF,KAnB0B,CAA3B;AAoBD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,mBAAL;AAED;;AAEDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEtB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AA3C+B;;AA8ClC,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACrCjB,EAAAA,cAAc,EAAEkB,IAAI,IAAID,QAAQ,CAACjB,cAAc,CAACkB,IAAD,CAAf;AADK,CAAL,CAAnC;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCf,GAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport Header from './components/header/header.component';\nimport { auth } from './components/firebase/firebase.utils';\nimport {createUserProfileDocument} from './components/firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/user.actions';\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => { //onAuthStateChanged is always listening to any changes to the state check components sign up and sign in\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);// gets the user ref from the function the userRef has the id \n\n        userRef.onSnapshot(snapShot => {//works like .get() but this method takes a function with snapShot.data() we can actually what is inside the userRef\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n\n          \n      \n        });\n      }\n      else {\n      this.setState({ currentUser: userAuth }); //this way the application knows if an user is logged in and which user it is.\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();  \n   \n  }\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route path='/signin' component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n   setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\n\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}